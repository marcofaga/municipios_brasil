}
app3 <- c()
for(app1 in webElem) {
if (grepl("javascript:abreDetalhe", app1$getElementAttribute("href")[[1]])) {
ap2 <- gsub("'", "", stri_extract(app1$getElementAttribute("href")[[1]],
regex = "'K(.*?)'"))
app3 <- c(app3, ap2)
}
}
app3 <- app3[!is.na(app3)]
if(is.null(app3)) {
next()
}
y <- 0
z <- 0
for (app4 in app3) {
z <- z + 1
if (y == 1) {
(break)()
}
x <- 0
link <- paste("http://buscatextual.cnpq.br/buscatextual/visualizacv.do?id=",
app4, sep = "")
while (x == 0) {
# quebrando o captcha
remDr$navigate(link)
remDr$screenshot(file = "img/screen.png")
img <- image_read("img/screen.png")
img <- image_crop(img, "180x45+534+287")
img <- image_convert(img, colorspace = "gray")
img <- image_negate(img)
image_write(img, "screen.png")
ap2 <- readImage("screen.png")
ap2 <- 1 - ap2
ap2 <- ap2 > 0.5
# ap2 <- fillHull(ap2)
ap2 <- as.Image(matrix(ap2, 180, 45)[-c(1:20, 160:180), ])
ap2 <- t(ap2)
ap2 <- bwlabel(ap2)
ap3 <- max(ap2)
ap6 <- c()
for (ii in 1:ap3) {
ap4 <- matrix(ap2 == ii, 45, 139)
ap5 <- which(ap4 == T, arr.ind = T)
ap4 <- as.Image(ap4[sort(unique(ap5[, 1])), unique(ap5[, 2])])
if (dim(ap4)[1] <= 5 | dim(ap4)[2] <= 5) {
ap6 <- c(ap6, ii)
}
}
ap2 <- rmObjects(ap2, ap6, reenumerate = T)
ap2 <- t(ap2)
# display(colorLabels(ap2), all=TRUE)
ap3 <- max(ap2)
if (ap3 < 4) {
next
}
ap7 <- c()
for (ii in 1:4) {
ap3 <- matrix(ap2 == ii, 139, 45)
ap4 <- which(ap3 == T, arr.ind = T)
ap3 <- as.Image(ap3[sort(unique(ap4[, 1])), unique(ap4[, 2])])
ap3 <- resize(ap3, w = 30, h = 30)
ap3 <- c(ap3)
ap3 <- data.frame(ap3)
ap3 <- t(ap3)
ap3 <- data.frame(ap3)
names(ap3) <- c(paste("pixel", c(1:900)))
ap3 <- t(ap3)
dim(ap3) <- c(30, 30, 1, ncol(ap3))
predicted <- predict(model, ap3)
predicted_labels <- max.col(t(predicted)) - 1
ap1 <- bd_labels$char[bd_labels$id == predicted_labels]
ap7 <- c(ap7, ap1)
}
ap7 <- paste(ap7, collapse = "")
go2 <- tryCatch(remDr$findElement("class name", "inputCaptcha")$sendKeysToElement(list(ap7)),
error = function(e) e)
if (inherits(go2, "error")) {
next
}
remDr$findElement("class name", "linkButtonCaptcha")$clickElement()
Sys.sleep(1)
### checagem
remDr$screenshot(file = "img/check.png")
img2 <- image_read("img/check.png")
img2 <- image_crop(img2, "37x15+531+207")
if (ocr(img2) == "Digits\n\n") {
(next)()
} else {
orient <- remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[5]/div")$getElementText()[[1]]
orient <- stri_trans_general(orient, "Latin-ASCII")
orient <- gsub("[^0-9A-Za-z///' ]", " ", orient)
orient <- rm_white(orient)
orient <- strsplit(orient, " ")[[1]]
orient <- unique(orient)
orient <- tolower(orient)
if (length(which(aps3 %in% orient)) > 1) {
apid <- gsub("Endereço para acessar este CV: http://lattes.cnpq.br/",
"", remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[1]/ul/li[1]")$getElementText()[[1]])
apag2 <- rbind(apag2, c(aps1, apid, aps2))
y <- 1
(break)()
} else {
if (z == length(app3)) {
apag2 <- rbind(apag2, c(aps1, "NO MATCH", aps2))
}
(break)()
}
}
}
}
}
View(apag2)
save.image()
apag <- apag[!apag$pk %in% apag2[, 3], ]
t <- 0
p <- 0
for(aps1 in apag$orientando) {
p <- p + 1
t <- t + 1
if (p == 100) {
save.image()
gc()
p <- 0
}
aps2 <- apag$pk[t]
aps3  <- bd02_orientandos$orientador[bd02_orientandos$pk == aps2]
aps3 <- stri_trans_general(aps3, "Latin-ASCII")
aps3 <- gsub("[^0-9A-Za-z///' ]", " ", aps3)
aps3 <- gsub("\\'"," ", aps3)
aps3 <- strsplit(aps3, " ")[[1]]
aps3 <- aps3[!aps3 %in% stopwords()]
aps3 <- tolower(aps3)
aps3 <- rm_white(aps3)
# navegando e fazendo a busca por nome no lattes
remDr$navigate("http://buscatextual.cnpq.br/buscatextual/busca.do?metodo=apresentar")
webElem <- remDr$findElement(using = "id", "buscarDemais")$clickElement()
webElem <- remDr$findElement(using = "id", "textoBusca")$sendKeysToElement(list(aps1))
webElem <- remDr$findElement(using = "id", "botaoBuscaFiltros")$clickElement()
webElem <- remDr$findElements("css", "[href]")
if (grepl("Nenhum resultado", remDr$findElement("xpath", "/html/body/form/div/div[4]/div/div/div/div[3]/div/div[1]")$getElementText()[[1]])) {
apag2 <- rbind(apag2, c(aps1, "NO LATTES", aps2))
(next)()
}
if (grepl("Resultados de 1 - 10", remDr$findElement("xpath", "/html/body/form/div/div[4]/div/div/div/div[3]/div/div[1]")$getElementText()[[1]])) {
apag2 <- rbind(apag2, c(aps1, "NOME COMUM", aps2))
(next)()
}
app3 <- c()
for(app1 in webElem) {
if (grepl("javascript:abreDetalhe", app1$getElementAttribute("href")[[1]])) {
ap2 <- gsub("'", "", stri_extract(app1$getElementAttribute("href")[[1]],
regex = "'K(.*?)'"))
app3 <- c(app3, ap2)
}
}
app3 <- app3[!is.na(app3)]
if(is.null(app3)) {
next()
}
y <- 0
z <- 0
for (app4 in app3) {
z <- z + 1
if (y == 1) {
(break)()
}
x <- 0
link <- paste("http://buscatextual.cnpq.br/buscatextual/visualizacv.do?id=",
app4, sep = "")
while (x == 0) {
# quebrando o captcha
remDr$navigate(link)
remDr$screenshot(file = "img/screen.png")
img <- image_read("img/screen.png")
img <- image_crop(img, "180x45+534+287")
img <- image_convert(img, colorspace = "gray")
img <- image_negate(img)
image_write(img, "screen.png")
ap2 <- readImage("screen.png")
ap2 <- 1 - ap2
ap2 <- ap2 > 0.5
# ap2 <- fillHull(ap2)
ap2 <- as.Image(matrix(ap2, 180, 45)[-c(1:20, 160:180), ])
ap2 <- t(ap2)
ap2 <- bwlabel(ap2)
ap3 <- max(ap2)
ap6 <- c()
for (ii in 1:ap3) {
ap4 <- matrix(ap2 == ii, 45, 139)
ap5 <- which(ap4 == T, arr.ind = T)
ap4 <- as.Image(ap4[sort(unique(ap5[, 1])), unique(ap5[, 2])])
if (dim(ap4)[1] <= 5 | dim(ap4)[2] <= 5) {
ap6 <- c(ap6, ii)
}
}
ap2 <- rmObjects(ap2, ap6, reenumerate = T)
ap2 <- t(ap2)
# display(colorLabels(ap2), all=TRUE)
ap3 <- max(ap2)
if (ap3 < 4) {
next
}
ap7 <- c()
for (ii in 1:4) {
ap3 <- matrix(ap2 == ii, 139, 45)
ap4 <- which(ap3 == T, arr.ind = T)
ap3 <- as.Image(ap3[sort(unique(ap4[, 1])), unique(ap4[, 2])])
ap3 <- resize(ap3, w = 30, h = 30)
ap3 <- c(ap3)
ap3 <- data.frame(ap3)
ap3 <- t(ap3)
ap3 <- data.frame(ap3)
names(ap3) <- c(paste("pixel", c(1:900)))
ap3 <- t(ap3)
dim(ap3) <- c(30, 30, 1, ncol(ap3))
predicted <- predict(model, ap3)
predicted_labels <- max.col(t(predicted)) - 1
ap1 <- bd_labels$char[bd_labels$id == predicted_labels]
ap7 <- c(ap7, ap1)
}
ap7 <- paste(ap7, collapse = "")
go2 <- tryCatch(remDr$findElement("class name", "inputCaptcha")$sendKeysToElement(list(ap7)),
error = function(e) e)
if (inherits(go2, "error")) {
next
}
remDr$findElement("class name", "linkButtonCaptcha")$clickElement()
Sys.sleep(1)
### checagem
remDr$screenshot(file = "img/check.png")
img2 <- image_read("img/check.png")
img2 <- image_crop(img2, "37x15+531+207")
if (ocr(img2) == "Digits\n\n") {
(next)()
} else {
orient <- remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[5]/div")$getElementText()[[1]]
orient <- stri_trans_general(orient, "Latin-ASCII")
orient <- gsub("[^0-9A-Za-z///' ]", " ", orient)
orient <- rm_white(orient)
orient <- strsplit(orient, " ")[[1]]
orient <- unique(orient)
orient <- tolower(orient)
if (length(which(aps3 %in% orient)) > 1) {
apid <- gsub("Endereço para acessar este CV: http://lattes.cnpq.br/",
"", remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[1]/ul/li[1]")$getElementText()[[1]])
apag2 <- rbind(apag2, c(aps1, apid, aps2))
y <- 1
(break)()
} else {
if (z == length(app3)) {
apag2 <- rbind(apag2, c(aps1, "NO MATCH", aps2))
}
(break)()
}
}
}
}
}
remDr$close()  #limpando quaisquer seção aberta
rm(rD, remDr)
gc()
eCaps <- list(chromeOptions = list(prefs = list(profile.default_content_settings.popups = 0L,
download.prompt_for_download = FALSE, download.default_directory = "C:/xmlendyra2")))
x <- 0
while (x == 0) {
rD <- rsDriver(4445L, verbose = FALSE, version = "3.7.1", extraCapabilities = eCaps)
if (any(ls() == "rD")) {
(break)()
}
}
remDr <- rD$client
remDr$setTimeout(type = "implicit", milliseconds = 10000)
remDr$maxWindowSize()
apag <- apag[!apag$pk %in% apag2[, 3], ]
t <- 0
p <- 0
apag <- apag[!apag$pk %in% apag2[, 3], ]
for(aps1 in apag$orientando) {
p <- p + 1
t <- t + 1
if (p == 100) {
save.image()
gc()
p <- 0
}
aps2 <- apag$pk[t]
aps3  <- bd02_orientandos$orientador[bd02_orientandos$pk == aps2]
aps3 <- stri_trans_general(aps3, "Latin-ASCII")
aps3 <- gsub("[^0-9A-Za-z///' ]", " ", aps3)
aps3 <- gsub("\\'"," ", aps3)
aps3 <- strsplit(aps3, " ")[[1]]
aps3 <- aps3[!aps3 %in% stopwords()]
aps3 <- tolower(aps3)
aps3 <- rm_white(aps3)
# navegando e fazendo a busca por nome no lattes
remDr$navigate("http://buscatextual.cnpq.br/buscatextual/busca.do?metodo=apresentar")
webElem <- remDr$findElement(using = "id", "buscarDemais")$clickElement()
webElem <- remDr$findElement(using = "id", "textoBusca")$sendKeysToElement(list(aps1))
webElem <- remDr$findElement(using = "id", "botaoBuscaFiltros")$clickElement()
webElem <- remDr$findElements("css", "[href]")
if (grepl("Nenhum resultado", remDr$findElement("xpath", "/html/body/form/div/div[4]/div/div/div/div[3]/div/div[1]")$getElementText()[[1]])) {
apag2 <- rbind(apag2, c(aps1, "NO LATTES", aps2))
(next)()
}
if (grepl("Resultados de 1 - 10", remDr$findElement("xpath", "/html/body/form/div/div[4]/div/div/div/div[3]/div/div[1]")$getElementText()[[1]])) {
apag2 <- rbind(apag2, c(aps1, "NOME COMUM", aps2))
(next)()
}
app3 <- c()
for(app1 in webElem) {
if (grepl("javascript:abreDetalhe", app1$getElementAttribute("href")[[1]])) {
ap2 <- gsub("'", "", stri_extract(app1$getElementAttribute("href")[[1]],
regex = "'K(.*?)'"))
app3 <- c(app3, ap2)
}
}
app3 <- app3[!is.na(app3)]
if(is.null(app3)) {
next()
}
y <- 0
z <- 0
for (app4 in app3) {
z <- z + 1
if (y == 1) {
(break)()
}
x <- 0
link <- paste("http://buscatextual.cnpq.br/buscatextual/visualizacv.do?id=",
app4, sep = "")
while (x == 0) {
# quebrando o captcha
remDr$navigate(link)
remDr$screenshot(file = "img/screen.png")
img <- image_read("img/screen.png")
img <- image_crop(img, "180x45+534+287")
img <- image_convert(img, colorspace = "gray")
img <- image_negate(img)
image_write(img, "screen.png")
ap2 <- readImage("screen.png")
ap2 <- 1 - ap2
ap2 <- ap2 > 0.5
# ap2 <- fillHull(ap2)
ap2 <- as.Image(matrix(ap2, 180, 45)[-c(1:20, 160:180), ])
ap2 <- t(ap2)
ap2 <- bwlabel(ap2)
ap3 <- max(ap2)
ap6 <- c()
for (ii in 1:ap3) {
ap4 <- matrix(ap2 == ii, 45, 139)
ap5 <- which(ap4 == T, arr.ind = T)
ap4 <- as.Image(ap4[sort(unique(ap5[, 1])), unique(ap5[, 2])])
if (dim(ap4)[1] <= 5 | dim(ap4)[2] <= 5) {
ap6 <- c(ap6, ii)
}
}
ap2 <- rmObjects(ap2, ap6, reenumerate = T)
ap2 <- t(ap2)
# display(colorLabels(ap2), all=TRUE)
ap3 <- max(ap2)
if (ap3 < 4) {
next
}
ap7 <- c()
for (ii in 1:4) {
ap3 <- matrix(ap2 == ii, 139, 45)
ap4 <- which(ap3 == T, arr.ind = T)
ap3 <- as.Image(ap3[sort(unique(ap4[, 1])), unique(ap4[, 2])])
ap3 <- resize(ap3, w = 30, h = 30)
ap3 <- c(ap3)
ap3 <- data.frame(ap3)
ap3 <- t(ap3)
ap3 <- data.frame(ap3)
names(ap3) <- c(paste("pixel", c(1:900)))
ap3 <- t(ap3)
dim(ap3) <- c(30, 30, 1, ncol(ap3))
predicted <- predict(model, ap3)
predicted_labels <- max.col(t(predicted)) - 1
ap1 <- bd_labels$char[bd_labels$id == predicted_labels]
ap7 <- c(ap7, ap1)
}
ap7 <- paste(ap7, collapse = "")
go2 <- tryCatch(remDr$findElement("class name", "inputCaptcha")$sendKeysToElement(list(ap7)),
error = function(e) e)
if (inherits(go2, "error")) {
next
}
remDr$findElement("class name", "linkButtonCaptcha")$clickElement()
Sys.sleep(1)
### checagem
remDr$screenshot(file = "img/check.png")
img2 <- image_read("img/check.png")
img2 <- image_crop(img2, "37x15+531+207")
if (ocr(img2) == "Digits\n\n") {
(next)()
} else {
orient <- remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[5]/div")$getElementText()[[1]]
orient <- stri_trans_general(orient, "Latin-ASCII")
orient <- gsub("[^0-9A-Za-z///' ]", " ", orient)
orient <- rm_white(orient)
orient <- strsplit(orient, " ")[[1]]
orient <- unique(orient)
orient <- tolower(orient)
if (length(which(aps3 %in% orient)) > 1) {
apid <- gsub("Endereço para acessar este CV: http://lattes.cnpq.br/",
"", remDr$findElement("xpath", "/html/body/div[1]/div[3]/div/div/div/div[1]/ul/li[1]")$getElementText()[[1]])
apag2 <- rbind(apag2, c(aps1, apid, aps2))
y <- 1
(break)()
} else {
if (z == length(app3)) {
apag2 <- rbind(apag2, c(aps1, "NO MATCH", aps2))
}
(break)()
}
}
}
}
}
apag <- apag[!apag$pk %in% apag2[, 3], ]
View(apag)
View(apag2)
install.packages("gmailR")
install.packages("gmailr")
install.packages("mailR")
library(mailR)
install.packages("RPushbullet")
save.image()
install.packages("jsonlite")
library(jsonlite)
library(RPushbullet)
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
setwd("C:\\Users\\Marco Faganello\\Dropbox\\R\\pushbullet")
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
library(RPushbullet)
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
setwd("C:\\Users\\Marco Faganello\\Dropbox\\R\\pushbullet")
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
setwd("C:\\Users\\Marco Faganello\\Dropbox\\projetos\\endyra_lattes\\R")
library(RPushbullet)
setwd("C:\\Users\\Marco Faganello\\Dropbox\\R\\pushbullet")
library(RPushbullet)
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
list.files
list.files()
Sys.getenv("HOME")
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
library(RPushbullet)
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
library(RPushbullet)
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
cat(RJSONSIO::toJSON(list(key="o.gQDNDmrDbKoE8kRN8iAZCSSQug39FDrp", devices=c("..device a..", "..device b.."))))
library(RJSONSIO)
install.packages("RJSONSIO")
cat(RJSONSIO::toJSON(list(key="o.gQDNDmrDbKoE8kRN8iAZCSSQug39FDrp", devices=c("..device a..", "..device b.."))))
library(RJONSIO)
pbPost("note", "A simple title", "A message\nWith a second line")
pbGetDevices()
pbGetDevices()
pbGetDevices()
pbGetDevices()
pbGetDevices()
pbGetDevices()
pbPost("note", "A simple title", "A message\nWith a second line")
Sys.getenv("HOME")
pbPost("note", "A simple title", "A message\nWith a second line")
setwd("C:/Users/Marco Faganello/Documents")
fromJSON(pbGetDevices())$devices[,c("iden", "nickname")]
list.files
list.files()
list.files()
list.files()
pbPost("note", "A simple title", "A message\nWith a second line")
install.packages("RPBBullet")
library(RPushbullet)
quit()
library(RPushbullet)
library(RPushbullet)
quit()
# BASE ======================================================================
setwd("C:\\Users\\Marco Faganello\\Dropbox\\Estatisticas Essenciais\\Estatísticas Municipais")
load("histmun.RData")
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
latextabdic(bd01_dicionario)
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
View(bd01_dicionario)
bd01_dicionario$codigos <- NA
bd01_dicionario <- bd01_dicionario[, c(1, 2, 4, 3, 6, 5)]
View(bd01_dicionario)
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
bd01_dicionario[1,]
bd01_dicionario[1,][5]
is.na(bd01_dicionario[1,][5])
paste(bd01_dicionario[1,])
bd01_dicionario[,c(1:6)] <- lapply(bd01_dicionario[,c(1:6)], function(x) as.character(x))
View(bd01_dicionario)
paste(bd01_dicionario[1,])
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
source('C:/Users/Marco Faganello/Dropbox/Estatisticas Essenciais/Estatísticas Municipais/functions/latex_dic.R')
latextabdic(bd01_dicionario)
latextabdic(bd01_dicionario)
save.image("histmun.RData")
